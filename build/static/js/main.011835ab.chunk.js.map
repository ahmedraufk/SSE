{"version":3,"sources":["res/img/sociallyDistantVoters.svg","res/img/googleMaps.png","res/img sync /^/.//.*$","res/img/waitPoster.png","components/menu/Menu.js","components/popup/Popup.js","components/search/Search.js","components/home/Home.js","components/county_wide/CountyWide.js","components/location/Location.js","components/faq/Faq.js","components/footer/Footer.js","components/app/App.js","serviceWorker.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","Menu","props","pageLocation","useState","locations","setLocations","filteredLocations","setFilteredLocations","useEffect","fetch","then","response","json","Navbar","collapseOnSelect","expand","variant","Brand","src","sociallyDistantVoters","width","height","className","alt","Toggle","aria-controls","Collapse","Nav","Link","href","showDropdown","Dropdown","Container","FormControl","autoFocus","placeholder","onChange","searchText","target","value","toLowerCase","newData","filter","location","text","name","address","nameMatch","indexOf","addressMatch","match","length","Item","as","key","to","pathname","location_id","onClick","localStorage","setItem","window","reload","Popup","show","setShow","handleClose","Button","tabIndex","Modal","onHide","backdrop","keyboard","Header","closeButton","Title","Body","Footer","Search","hidden","setHidden","data","setData","filteredData","setFilteredData","Form","Control","size","type","label","ListGroup","i","action","Home","scrollTo","Row","Col","md","headerImage","CountyWide","sortBy","setSortBy","sortCards","sort","sorted","a","b","sm","mapboxgl","accessToken","Location","setLocation","mapboxElRef","useRef","chartRef","locationId","getItem","Map","container","current","style","center","lon","lat","zoom","addControl","NavigationControl","Marker","setLngLat","addTo","myChartRef","getContext","Chart","labels","datasets","backgroundColor","borderColor","borderWidth","options","scales","yAxes","ticks","beginAtZero","lg","ref","gmapsLogo","Badge","Faq","Accordion","defaultActiveKey","faq","question","Card","eventKey","answer","img","require","App","exact","path","component","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.011835ab.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sociallyDistantVoters.ff8e6cd3.svg\";","module.exports = __webpack_public_path__ + \"static/media/googleMaps.c181ef10.png\";","var map = {\n\t\"./googleMaps.png\": 53,\n\t\"./sociallyDistantVoters.svg\": 35,\n\t\"./waitPoster.png\": 92\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 91;","module.exports = __webpack_public_path__ + \"static/media/waitPoster.71b70af8.png\";","import React, {useEffect, useState} from 'react';\nimport {Link} from \"react-router-dom\";\nimport {Container, Nav, Navbar, FormControl, Dropdown} from \"react-bootstrap\";\nimport sociallyDistantVoters from '../../res/img/sociallyDistantVoters.svg';\nimport './Menu.css';\n\nfunction Menu(props) {\n  const pageLocation = props.pageLocation\n  const [locations, setLocations] = useState([]);\n  const [filteredLocations, setFilteredLocations] = useState([]);\n\n  useEffect(() => {\n    fetch('/api/locations')\n      .then(response => response.json())\n      .then(locations => {\n        setLocations(locations);\n        setFilteredLocations(locations);\n      })\n  }, []);\n\n  function reloadLocation(location_id) {\n    localStorage.setItem(\"location_id\", location_id);\n    window.location.reload();\n  }\n\n  function handleSearch(e) {\n    let searchText = e.target.value.toLowerCase();\n    let newData = locations.filter(location => match(searchText, location.name, location.address));\n    setFilteredLocations(newData);\n  }\n\n  function match(text, name, address) {\n    let nameMatch = name.toLowerCase().indexOf(text.toLowerCase()) > -1;\n    let addressMatch = address.toLowerCase().indexOf(text.toLowerCase()) > -1;\n    return nameMatch || addressMatch;\n  }\n\n  return (\n    <Navbar collapseOnSelect expand=\"md\" id=\"menu\" variant =\"dark\">\n      <Navbar.Brand>\n        <img\n          src={sociallyDistantVoters}\n          width=\"60\"\n          height=\"30\"\n          className=\"d-inline-block align-top\"\n          alt=\"Graphic of voters socially distancing\"\n        />\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"#/\" className=\"menuLink\"><i className=\"fas fa-home\"/>Home</Nav.Link>\n          <Nav.Link href=\"#/countyWide\" className=\"menuLink\"><i className=\"far fa-building\"/>County Wide</Nav.Link>\n          <Nav.Link href=\"#/faq\" className=\"menuLink\"><i className=\"far fa-question-circle\"/>FAQs</Nav.Link>\n        </Nav>\n        { props.showDropdown &&\n        <Dropdown>\n          <Dropdown.Toggle variant=\"light\">\n            Select a location\n          </Dropdown.Toggle>\n\n          <Dropdown.Menu id=\"menuDropdownMenu\">\n            <Container>\n              <FormControl\n                autoFocus\n                placeholder=\"Type to filter...\"\n                onChange={handleSearch}\n                id=\"dropdownMenuFilter\"\n              />\n              { filteredLocations.length > 0 && pageLocation !== \"location\" &&\n                filteredLocations.map(location => (\n                  <Dropdown.Item as={Link} className=\"dropdownItem\"\n                     key={location.id} to={{\n                       pathname: '/location',\n                       location_id: location.id\n                     }}>\n                    <h6 className=\"dropdownName\">{location.name}</h6>\n                    <p className=\"dropdownAddress\">{location.address}</p>\n                  </Dropdown.Item>\n                ))\n              }\n              { filteredLocations.length > 0 && pageLocation === \"location\" &&\n                filteredLocations.map(location => (\n                  <Dropdown.Item as={Link} className=\"dropdownItem\" onClick={() => reloadLocation(location.id)}\n                       key={location.id} to=\"#/location\">\n                    <h6 className=\"dropdownName\">{location.name}</h6>\n                    <p className=\"dropdownAddress\">{location.address}</p>\n                  </Dropdown.Item>\n                ))\n              }\n              { filteredLocations.length < 1 &&\n                <Dropdown.Item>\n                  <h6 id=\"menuNoLocationsFound\">No locations found.</h6>\n                </Dropdown.Item>\n              }\n            </Container>\n          </Dropdown.Menu>\n        </Dropdown>\n        }\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n\nexport default Menu;\n","import React, {useState} from 'react';\nimport {Modal,Button} from \"react-bootstrap\";\nimport './Popup.css';\n\nfunction Popup() {\n    const [show, setShow] = useState(false);\n    function handleClose() {setShow(false)};\n    function handleShow() {setShow(true)};\n\n    return (\n        <div id=\"dontKnowPopup\">\n            <Button id=\"dontKnowButton\" variant=\"secondary\" onClick={handleShow} tabIndex=\"1000\">\n                I don't know my polling place\n            </Button>\n            <Modal\n                show={show}\n                onHide={handleClose}\n                backdrop=\"static\"\n                keyboard={false}\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title>I don't know my polling place.</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    This link is taking you to https://www.mvp.sos.ga.gov, Georgia's polling place locator.\n                    Enter your details on this page to find your polling place, then come back with the address or name.\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"primary\" href=\"https://www.mvp.sos.ga.gov\" target=\"_blank\" onClick={handleClose}>Go</Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    );\n}\n\nexport default Popup;","import React, {useState, useEffect} from 'react';\nimport {Link} from \"react-router-dom\";\nimport {Form, Container, ListGroup} from \"react-bootstrap\";\nimport Popup from \"../popup/Popup\";\nimport './Search.css';\n\nfunction Search(props) {\n  const [hidden,setHidden] = useState(true);\n  const [data,setData] = useState([]);\n  const [filteredData,setFilteredData] = useState([]);\n\n  useEffect(() => {\n    setData(props.locations);\n    setFilteredData(props.locations);\n  }, [props.locations]);\n\n  function handleSearch(e) {\n    let searchText = e.target.value.toLowerCase();\n    if (searchText !== \"\") {\n      setHidden(false);\n    } else {\n      setHidden(true);\n    }\n    let newData = data.filter(location => match(searchText, location.name, location.address));\n    setFilteredData(newData);\n  }\n\n  function match(text, name, address) {\n    let nameMatch = name.toLowerCase().indexOf(text.toLowerCase()) > -1;\n    let addressMatch = address.toLowerCase().indexOf(text.toLowerCase()) > -1;\n    return nameMatch || addressMatch;\n  }\n\n  return (\n    <Container id=\"search\">\n        <h2 id=\"searchTitle\">Search for your polling place</h2>\n        <div className=\"searchdrop\">\n          <Form>\n            <Form.Control id=\"searchBar\" size=\"lg\" type=\"search\" placeholder=\"Select a location\"\n                          label=\"Search box\" onChange={handleSearch} onClick={() => setHidden(!hidden)}/>\n          </Form>\n        </div>\n        { !hidden &&\n          <div id=\"dropdown\">\n            <ListGroup id=\"searchLocationsGroup\">\n              { filteredData.length > 0\n                ? filteredData.map((location, i) => (\n                    <Link to={{\n                      pathname: '/location',\n                      location_id: location.id\n                    }} className=\"searchLink\" key={location.id}>\n                      <ListGroup.Item className=\"searchResult\" action key={location.id} tabIndex={i+1}>\n                        <h5>{location.name}</h5>\n                        <p>{location.address}</p>\n                      </ListGroup.Item>\n                    </Link>\n                  ))\n                : <ListGroup.Item><h5 id=\"noLocationsFound\">No locations found.</h5></ListGroup.Item>\n              }\n            </ListGroup>\n          </div>\n        }\n        <Popup/>\n    </Container>\n  );\n}\n\nexport default Search;","import React, {useEffect, useState} from 'react';\nimport {Container, Col, Row} from \"react-bootstrap\";\nimport Menu from \"../menu/Menu\";\nimport Search from \"../search/Search\";\nimport headerImage from '../../res/img/sociallyDistantVoters.svg'\nimport \"./Home.css\";\n\nfunction Home() {\n    const[data,setData] = useState([]);\n\n    useEffect(() => {\n      window.scrollTo(0,0);\n      fetch('/api/locations')\n            .then(response => response.json())\n            .then(data => {\n                setData(data);\n            });\n    }, []);\n\n    return (\n        <div className=\"home\">\n          <Menu showDropdown={false}/>\n            <div id=\"header\">\n              <Container>\n                <Row className=\"d-flex align-items-center\">\n                  <Col md={6}>\n                    <img className=\"img-fluid\" src={headerImage} alt=\"Graphic showing socially distant voters\"/>\n                  </Col>\n                  <Col id=\"headerTextColumn\" md={6}>\n                    <h1>Welcome to the Fulton County voter wait time portal!</h1>\n                  </Col>\n                </Row>\n              </Container>\n            </div>\n            <Search locations={data}/>\n        </div>\n    );\n}\n\nexport default Home;\n","import React, {useEffect, useState} from 'react';\nimport {Link} from \"react-router-dom\";\nimport {Dropdown, Container, Row, Col, Form} from \"react-bootstrap\";\nimport Menu from \"../menu/Menu\";\nimport './CountyWide.css';\n\nfunction CountyWide() {\n  const [locations, setLocations] = useState([]);\n  const [filteredLocations, setFilteredLocations] = useState([]);\n  const [sortBy, setSortBy] = useState(\"Alphabetical\");\n\n  useEffect(() => {\n    window.scrollTo(0,0);\n    fetch('/api/locations')\n      .then(response => response.json())\n      .then(locations => {\n        setLocations(locations);\n        setFilteredLocations(locations);\n      })\n  }, []);\n\n  function handleFilter(e){\n    let searchText = e.target.value.toLowerCase();\n    let newData = locations.filter(location => match(searchText, location.name, location.address));\n    setFilteredLocations(newData);\n  }\n\n  function match(text, name, address) {\n    let nameMatch = name.toLowerCase().indexOf(text.toLowerCase()) > -1;\n    let addressMatch = address.toLowerCase().indexOf(text.toLowerCase()) > -1;\n    return nameMatch || addressMatch;\n  }\n\n  function sortCards(sort){\n    let sorted;\n    switch (sort) {\n      case \"Alphabetical\":\n        sorted = filteredLocations.sort((a, b) => (a.name > b.name) ? 1 : -1);\n        setFilteredLocations(sorted);\n        setSortBy(\"Alphabetical\");\n        break;\n      case \"Lowest wait time\":\n      //   sorted = filteredLocations.sort((a, b) => (a.wait_time > b.wait_time) ? 1 : -1);\n      //   setFilteredLocations(sorted);\n        setSortBy(\"Lowest wait time\");\n        break;\n      default:\n        break;\n    }\n  }\n\n  return (\n    <div className=\"countyWide\">\n      <Menu pageLocation=\"countyWide\" showDropdown={true}/>\n      <Container id=\"countyWideContainer\">\n        <Row className=\"d-flex align-items-center\">\n          <Col sm={6}>\n            <h1>County Wide</h1>\n          </Col>\n          <Col id=\"dropdownColumn\" sm={6}>\n            <Dropdown id=\"sortDropdown\">\n              <Dropdown.Toggle variant=\"success\">\n                Sort By: {sortBy}\n              </Dropdown.Toggle>\n              <Dropdown.Menu>\n                <Dropdown.Item onClick={() => sortCards(\"Alphabetical\")}>Alphabetical</Dropdown.Item>\n                <Dropdown.Item onClick={() => sortCards(\"Lowest wait time\")}>Lowest wait time</Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n          </Col>\n        </Row>\n        <Row>\n          <Form.Control id=\"countyWideFilter\"\n                        size=\"lg\"\n                        type=\"search\"\n                        placeholder=\"Type to filter...\"\n                        onChange={handleFilter}/>\n        </Row>\n        <Row id=\"cardsContainer\">\n          { filteredLocations.length > 0\n            ? filteredLocations.map(location => (\n                <Link to={{\n                  pathname: '/location',\n                  location_id: location.id\n                }} key={location.id} className=\"countyWideCard\" >\n                  <h6 id=\"nameLabel\">{location.name}</h6>\n                  <h6 id=\"addressLabel\">{location.address}</h6>\n                  <div id=\"timeLabelContainer\">\n                    <h1 id=\"minutes\">24</h1>\n                    <h4 id=\"minutesLabel\">minutes</h4>\n                  </div>\n                </Link>\n              ))\n            : <h5 id=\"countyWideNoLocationsFound\">No locations found.</h5>\n          }\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default CountyWide;\n","import React, {useState, useRef, useEffect} from 'react';\nimport {Badge, Button, Col, Container, Row} from \"react-bootstrap\";\nimport Menu from \"../menu/Menu\";\nimport mapboxgl from 'mapbox-gl';\nimport Chart from \"chart.js\";\nimport gmapsLogo from '../../res/img/googleMaps.png';\nimport './Location.css';\n\nmapboxgl.accessToken = \"pk.eyJ1IjoibWljaGFlbC1rMTAxIiwiYSI6ImNqajBkMXNmbDBnbzAza2x6Mnp1Mjl5YWIifQ.K5e1fvORu0_ZfSPH4cGlNA\"\n\nfunction Location(props) {\n  const [location, setLocation] = useState({});\n  const mapboxElRef = useRef(null);\n  const chartRef = useRef(null);\n\n  useEffect(() => {\n    window.scrollTo(0,0);\n    let locationId = localStorage.getItem(\"location_id\");\n    if (typeof props.location.location_id !== \"undefined\") {\n      localStorage.setItem(\"location_id\", props.location.location_id);\n      locationId = localStorage.getItem(\"location_id\");\n    }\n\n    fetch('/api/locations/' + locationId)\n      .then(response => response.json())\n      .then(data => {\n        setLocation(data);\n        const map = new mapboxgl.Map({\n          container: mapboxElRef.current,\n          style: \"mapbox://styles/mapbox/streets-v11\",\n          center: [data.lon, data.lat],\n          zoom: 12\n        });\n        map.addControl(new mapboxgl.NavigationControl());\n        new mapboxgl.Marker()\n          .setLngLat([data.lon, data.lat])\n          .addTo(map);\n      });\n\n    const myChartRef = chartRef.current.getContext(\"2d\");\n    new Chart(myChartRef, {\n      type: 'line',\n      data: {\n        labels: ['8-9 AM', '9-10 AM', '10-11 AM', '11-12 PM', '12-1 PM', '1-2 PM', '2-3 PM', '3-4 PM', '4-5 PM', '5-6 PM', '6-7 PM', '7-8 PM'],\n        datasets: [{\n          label: 'Today\\'s Wait Times',\n          data: [12, 19, 3, 5, 2, 3, 9, 10, 11, 12, 13, 14],\n          backgroundColor: [\n            'rgba(21, 75, 125, 0.3)',\n            'rgba(21, 75, 125, 0.3)',\n            'rgba(21, 75, 125, 0.3)',\n            'rgba(21, 75, 125, 0.3)',\n            'rgba(21, 75, 125, 0.3)',\n            'rgba(21, 75, 125, 0.3)',\n            'rgba(21, 75, 125, 0.3)',\n            'rgba(21, 75, 125, 0.3)',\n            'rgba(21, 75, 125, 0.3)',\n            'rgba(21, 75, 125, 0.3)',\n            'rgba(21, 75, 125, 0.3)',\n            'rgba(21, 75, 125, 0.3)'\n          ],\n          borderColor: [\n            'rgba(21, 75, 125, 1)',\n            'rgba(21, 75, 125, 1)',\n            'rgba(21, 75, 125, 1)',\n            'rgba(21, 75, 125, 1)',\n            'rgba(21, 75, 125, 1)',\n            'rgba(21, 75, 125, 1)',\n            'rgba(21, 75, 125, 1)',\n            'rgba(21, 75, 125, 1)',\n            'rgba(21, 75, 125, 1)',\n            'rgba(21, 75, 125, 1)',\n            'rgba(21, 75, 125, 1)',\n            'rgba(21, 75, 125, 1)'\n          ],\n          borderWidth: 1\n        }]\n      },\n      options: {\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true\n            }\n          }]\n        }\n      }\n    });\n  }, [props.location.location_id]);\n\n  return (\n    <div className=\"location\">\n      <Menu pageLocation=\"location\" showDropdown={true}/>\n      <Container id=\"locationContainer\">\n        <Row>\n          <Col lg={6}>\n            <h2 id=\"locationName\">{location.name}</h2>\n            <h6 id=\"locationAddress\">{location.address}</h6>\n            <div id=\"map\" ref={mapboxElRef}/>\n            <Button size=\"lg\"\n                    id=\"directionsButton\"\n                    variant=\"light\"\n                    href={\"https://www.google.com/maps/dir/?api=1&destination=\"+location.lat+\",\"+location.lon}\n                    target=\"_blank\">\n              <img className=\"img-fluid\" id=\"gmapsLogo\" src={gmapsLogo} alt=\"Google maps logo\"/>\n              Get Directions\n            </Button>\n          </Col>\n          <Col lg={6}>\n            <div className=\"waitTimesCard\">\n              <h4><Badge variant=\"primary\">Current Wait Time</Badge></h4>\n              <h1>35 minutes</h1>\n              <p id=\"lastUpdatedLabel\">Last updated: Today at 9:45 AM</p>\n            </div>\n            <div className=\"waitTimesCard\">\n              <Row>\n                <Col>\n                  <h4><Badge variant=\"success\">Lowest Today</Badge></h4>\n                  <div>\n                    <h3>30 minutes</h3>\n                    <p>at 9:30 AM</p>\n                  </div>\n                </Col>\n                <Col>\n                  <h4><Badge variant=\"danger\">Highest Today</Badge></h4>\n                  <div>\n                    <h3>45 minutes</h3>\n                    <p>at 8:15 AM</p>\n                  </div>\n                </Col>\n              </Row>\n            </div>\n            <canvas id=\"myChart\" ref={chartRef}/>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default Location;\n","import React from 'react';\nimport {Accordion, Card, Button, Container} from 'react-bootstrap';\nimport Menu from \"../menu/Menu\";\nimport faq from '../../res/faq.json';\nimport './Faq.css';\n\nfunction Faq() {\n\n  return (\n    <div className=\"faq\">\n      <Menu showDropdown={true}/>\n      <Container className=\"faqContainer\">\n        <h1>FAQs</h1>\n        <Accordion id=\"faqAccordion\" defaultActiveKey=\"0\">\n          { faq.map((question, i) => (\n              <Card key={i+1}>\n                <Card.Header>\n                  <Accordion.Toggle as={Button} variant=\"link\" eventKey={i+1}>\n                    {question.text}\n                  </Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey={i+1}>\n                  <Card.Body>\n                      <p>{question.answer}</p>\n                      { question.img.length > 0 &&\n                        <img src = { require(\"../../res/img/\" + question.img)}/>\n                      }\n\n                  </Card.Body>\n                </Accordion.Collapse>\n              </Card>\n\n            ))\n          }\n        </Accordion>\n      </Container>\n    </div>\n  );\n}\n\nexport default Faq;\n","import React from 'react';\nimport './Footer.css';\n\nfunction Footer() {\n\n  return (\n    <footer className=\"footer text-muted\">\n        <p id=\"footerText\">Copyright &copy; 2020 Georgia Institute of Technology</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport {Switch, Route} from 'react-router-dom';\nimport Home from '../home/Home';\nimport CountyWide from \"../county_wide/CountyWide\";\nimport Location from \"../location/Location\";\nimport Faq from \"../faq/Faq\";\nimport Footer from \"../footer/Footer\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n\n  return (\n    <div className=\"app\">\n      <Switch>\n        <Route exact path='/' component={Home}/>\n        <Route exact path='/countyWide' component={CountyWide}/>\n        <Route exact path='/faq' component={Faq}/>\n        <Route exact path='/location' component={Location}/>\n        <Route exact path='/error' component={Error}/>\n      </Switch>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport { HashRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}