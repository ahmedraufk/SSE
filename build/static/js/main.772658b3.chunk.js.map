{"version":3,"sources":["res/img/sociallyDistantVoters.svg","res/img/waitPoster.png","components/faq/Faq.js","components/home/Home.js","components/footer/Footer.js","components/app/App.js","serviceWorker.js","index.js"],"names":["module","exports","Faq","className","Container","Accordion","id","defaultActiveKey","Card","key","Header","Toggle","as","Button","variant","eventKey","Collapse","Body","src","require","alt","href","Home","Row","Col","md","headerImage","Footer","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.772658b3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sociallyDistantVoters.ff8e6cd3.svg\";","module.exports = __webpack_public_path__ + \"static/media/waitPoster.71b70af8.png\";","import React from 'react';\nimport {Accordion, Card, Button, Container} from 'react-bootstrap';\nimport Menu from \"../menu/Menu\";\nimport './Faq.css';\n\nfunction Faq() {\n\n  return (\n    <div className=\"faq\">\n      <Container className=\"faqContainer\">\n        <h1>FAQs</h1>\n        <Accordion id=\"faqAccordion\" defaultActiveKey=\"0\">\n            <Card key={1}>\n                <Card.Header>\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey={1}>\n                       What is the purpose of this site?\n                    </Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey={1}>\n                    <Card.Body>\n                        <p>This site is part of a project to improve the voting experience for voters across the United States. This election cycle, we are piloting a program for reporting wait times to voters in Fulton County, GA. We hope this site will help you be more informed about the current wait times at your polling location.</p>\n\n                    </Card.Body>\n                </Accordion.Collapse>\n            </Card>\n            <Card key={2}>\n                <Card.Header>\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey={2}>\n                        How can I use this site?\n                    </Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey={2}>\n                    <Card.Body>\n                        <p>This site will become active on election day: November 3rd, 2020. On that day, you will be able to search for any polling location in Fulton County and, if we are collecting data for that location, see what the currently reported wait time is. We will be collecting wait times for most, but not all, polling locations in Fulton County. Please keep in mind that this is a pilot program. Your actual experience of waiting times may differ from what is posted.</p>\n\n                    </Card.Body>\n                </Accordion.Collapse>\n            </Card>\n            <Card key={3}>\n                <Card.Header>\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey={3}>\n                        How do I report a wait time?\n                    </Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey={3}>\n                    <Card.Body>\n                        <p>\n                            Wait times should only be reported from the polling location itself, and during the pilot program we are only accepting wait time reports from a subset of polling locations. At those locations, you will see a sign near the exit like the one below. If you see that sign, please send a text to the number provided with the number of minutes you waited in line to vote.\n                        </p>\n                        <img className=\"img-fluid\" src={require(\"../../res/img/waitPoster.png\")} alt=\"Election poster\"/>\n                    </Card.Body>\n                </Accordion.Collapse>\n            </Card>\n            <Card key={4}>\n                <Card.Header>\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey={4}>\n                        Who is supporting this project?\n                    </Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey={4}>\n                    <Card.Body>\n                        <p>This project is a collaboration between the < a href={\"https://www.gatech.edu/\"} >Georgia Institute of Technology</a> and Fulton County. It is funded with a grant from < a href={\"https://www.newventurefund.org/\"} >The New Venture Fund</a>  based out of Washington, DC.\n\n                        </p>\n\n                    </Card.Body>\n                </Accordion.Collapse>\n            </Card>\n            <Card key={5}>\n                <Card.Header>\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey={5}>\n                        Why is this project only for Fulton County?\n                    </Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey={5}>\n                    <Card.Body>\n                        <p>\n                            This project is part of a larger program to evaluate tools to improve the voting experience across the United States. This particular wait time project is being piloted in Fulton County, while other projects that are funded by a grant from < a href={\"https://www.newventurefund.org/\"} >The New Venture Fund</a> are occurring in other locations.\n\n                        </p>\n\n                    </Card.Body>\n                </Accordion.Collapse>\n            </Card>\n            <Card key={6}>\n                <Card.Header>\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey={6}>\n                        How do you estimate the wait time?\n                    </Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey={6}>\n                    <Card.Body>\n                        <p>The current wait times you see on this site are a combination of reports from voters and observations made by members of our team. We combine every response we receive via text message and the observed times in a weighted average to produce the time shown on this site.\n                        </p>\n                    </Card.Body>\n                </Accordion.Collapse>\n            </Card>\n            <Card key={7}>\n                <Card.Header>\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey={7}>\n                        How do you protect my privacy?\n                    </Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey={7}>\n                    <Card.Body>\n                        <p>\n                        When you submit a wait time via SMS texting, your phone number is not stored. When you fill out an online survey as part of this project, no identifying information is stored about you or the device you submitted it on. Your participation in both of these activities is completely voluntary and anonymous.\n                        </p>\n                    </Card.Body>\n                </Accordion.Collapse>\n            </Card>\n            <Card key={8}>\n                <Card.Header>\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey={8}>\n                        What if I have a question that is not answered on this FAQ?\n                    </Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey={8}>\n                    <Card.Body>\n                        <p>\n                            If you have another question or feedback about this site, please email us at gbarkhuff3@gatech.edu.\n                        </p>\n                    </Card.Body>\n                </Accordion.Collapse>\n            </Card>\n        </Accordion>\n      </Container>\n    </div>\n  );\n}\n\nexport default Faq;\n","import React from 'react';\nimport {Container, Col, Row} from \"react-bootstrap\";\nimport headerImage from '../../res/img/sociallyDistantVoters.svg'\nimport \"./Home.css\";\nimport Faq from \"../faq/Faq\";\n\nfunction Home() {\n    return (\n      <div className=\"home\">\n        <div id=\"header\">\n          <Container>\n            <Row className=\"d-flex align-items-center\">\n              <Col md={6}>\n                <img className=\"img-fluid\" src={headerImage} alt=\"Graphic showing socially distant voters\"/>\n              </Col>\n              <Col id=\"headerTextColumn\" md={6}>\n                <h1>Welcome to the Fulton County voter wait time portal!</h1>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n        <Faq/>\n      </div>\n    );\n}\n\nexport default Home;\n","import React from 'react';\nimport './Footer.css';\n\nfunction Footer() {\n\n  return (\n    <footer className=\"footer text-muted\">\n        <p id=\"footerText\">Copyright &copy; 2020 Georgia Institute of Technology</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport {Switch, Route} from 'react-router-dom';\nimport Home from '../home/Home';\nimport Footer from \"../footer/Footer\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n\n  return (\n    <div className=\"app\">\n      <Switch>\n        <Route exact path='/' component={Home}/>\n      </Switch>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport { HashRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}